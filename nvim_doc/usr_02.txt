*usr_02.txt*	Nvim 译者@Butterblock233

		     VIM USER MANUAL - by Bram Moolenaar

			    The first steps in Vim


本章提供了使用 Vim 编辑文件的足够信息。 不好或快，但你可以编辑。 花些时间
练习这些命令，它们是后续内容的基础。

|02.1|	第一次运行Vim
|02.2|	插入文本
|02.3|	四处移动
|02.4|	删除字符
|02.5|	撤销和重做
|02.6|	其他编辑命令
|02.7|	Getting out
|02.8|	寻求帮助

     下一章节: |usr_03.txt|  四处移动
 前一章节: |usr_01.txt|  关于本手册
目录: |usr_toc.txt|

==============================================================================
*02.1* 第一次运行Vim 

输入以下命令启动Vim:>
    gvim file.txt
在Unix上，您可以在任何命令提示符下输入此命令。如果您正在运行Microsoft Windows，请打开命令
提示符并输入该命令。在任何情况下，Vim开始编辑名为file.txt的文件。因为这是一个新文件，所以您
会得到一个空白窗口。这是您的屏幕将会显示的内容:
>
	+---------------------------------------+
	|#					|
	|~					|
	|~					|
	|~					|
	|~					|
	|"file.txt" [New]			|
	+---------------------------------------+
		('#'是光标所在的行位置)
<
波浪号（～）所在的行表明该行不在文件中。换句话说，当Vim没有文件可显示时，就会显示波浪号。在屏
幕的底部，有一行信息显示文件名为 file.txt,并表明您在创建一个新文件。消息信息是临时的，其他
信息会覆盖它。

Vim命令

gvim 命令会使编辑器创建一个新窗口进行编辑。 如果使用此命令 >
	vim file.txt

编辑将在命令窗口中进行。换句话说，如果你在xterm中运行，编辑器就会使用这个xterm的窗口。如果
你使用的是Microsoft Windows 下的命令提示符，则编辑会在该窗口内进行。两个版本窗口中的文本看
起来是一样的，但使用 gvim 时会有额外的功能，比如菜单栏。稍后将会详细介绍。

==============================================================================
*02.2*	插入文本
Vim 编辑器是一个模态编辑器。 这意味着根据所处的模式而有所不同。 两种基本模式分别为 "正常 "
模式和 "插入 "模式。 在正常模式下，输入的字符是命令。 在插入模式下，输入的字符是文本。
	由于您刚启动 Vim，因此它将处于正常模式。 要启动插入模式，请键入 "i "命令（i 代表插
入）。 然后输入文本。 它将被插入到文件中。 如果输入错误，请不要担心，您可以稍后更正。 要输入
下面这首程序员的打油诗，你可以这样输入： >
		iA very intelligent turtle
		Found programming Unix a hurdle
输入 "turtle "后，按下 <Enter> 键开始新一行。最后按下 <Esc> 键，停止插入模式，返回正常模
式。 现在，Vim 窗口中有两行文本：
>
	+---------------------------------------+
	|A very intelligent turtle		|
	|Found programming Unix a hurdle	|
	|~					|
	|~					|
	|					|
	+---------------------------------------+
<

模式是什么？

为了能知道你在使用什么模式，输入这个命令:>
		:set showmode
你会发现，当输入冒号时，Vim 会将光标移动到窗口的最后一行。 这就是输入冒号命令（以冒号开头的
命令）的地方。 按下 <Enter> 键完成该命令（所有以冒号开头的命令都以这种方式完成）。
	  现在，如果你键入 "i "命令，Vim 将在窗口底部显示 --INSERT-- 字样。 这表明你已进入插
入模式。
>
	+---------------------------------------+
	|A very intelligent turtle		|
	|Found programming Unix a hurdle	|
	|~					|
	|~					|
	|-- INSERT --				|
	+---------------------------------------+
<
如果按下 <Esc> 返回正常模式，最后一行将由“-- INSERT --”变为空白。

摆脱困境

对于 Vim 新手来说，模式混乱是问题之一，这是因为忘记了所处的模式，或者不小心输入了切换模式的
命令。 要返回正常模式，无论你在哪个模式下，都要按 <Esc> 键。 有时需要按两次。 如果 Vim 发
出提示音，说明你已进入正常模式。
==============================================================================
*02.3*	四处移动
返回正常模式后，你可以使用以下键位四处移动：

	h   left						*hjkl*
	j   down
	k   up
	l   right

乍看起来，这些命令似乎是随意选择的。毕竟谁听说过用 "l"表示 "right"？但实际上选择这些命令是
有原因的：在编辑器中，移动光标是最常见的操作。而这些键都在你右手的主行上。换句话说，这些命令
就放在你能最快键入的地方（尤其是当你用十指输入时）。
	注：
	您也可以使用箭头键移动光标。 但这样做会大大减慢编辑速度，因为要按箭头键，你的手必须从文
	本键移到箭头键上。考虑到每小时可能要做上百次，这会耗费大量时间。
	   此外，有些键盘上没有方向键，或者方向键的位置不常见，因此，掌握 hjkl键的使用。可以节
	   省不少时间。
记住这些命令的一种方法是，h在左，l在右，j向下，k向上。如图：>

		       k
		   h     l
		     j

学习这些命令的最好方法就是多使用它们。 使用 "i "命令插入更多文本行。 然后使用 hjkl 键移动并在某处插入一个单词。 不要忘记按 <Esc> 键返回正常模式。 |:Tutor|也是边做边学的好方法。

对于日文用户, Hiroshi Iwatani 建议这样记忆:

			Komsomolsk(阿穆尔河畔共青城)
			    ^
			    |
	Huan Ho	<--- --->  Los Angeles(洛杉矶)
	 (黄河)		 |
				v
			  Java (爪哇岛，不是编程语言)
==============================================================================